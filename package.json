{
  "name": "@zcorky/words-parser",
  "version": "0.0.7",
  "description": "parse and transform word in text, use custom renderers for words",
  "main": "lib/index.js",
  "browser": "lib/index.min.js",
  "repository": "https://github.com/zcorky/words-parser",
  "homepage": "https://github.com/zcorky/words-parser",
  "bugs": {
    "url": "https://github.com/zcorky/words-parser/issues"
  },
  "keywords": [
    "zcorky",
    "words-parser",
    "node",
    "typescript"
  ],
  "author": "Zero <uniquecolesmith@gmail.com> (https://moeover.com)",
  "license": "MIT",
  "scripts": {
    "build": "npm run build:typescript && npm run build:rollup",
    "build:typescript": "npm run clean && tsc",
    "build:rollup": "rollup -c",
    "clean": "rimraf -rf lib",
    "test": "jest -w 1",
    "coverage": "jest -w 1 && codecov",
    "prepublishOnly": "npm run build"
  },
  "devDependencies": {
    "@types/jest": "^24.0.11",
    "@types/node": "^10.9.4",
    "@zodash/camel-case": "^0.0.7",
    "codecov": "^3.2.0",
    "cross-env": "^5.2.0",
    "husky": "^1.2.1",
    "jest": "^24.5.0",
    "rimraf": "^2.6.2",
    "rollup": "^1.20.2",
    "rollup-plugin-terser": "^5.1.1",
    "rollup-plugin-typescript2": "^0.23.0",
    "ts-jest": "^24.0.0",
    "ts-node": "^7.0.1",
    "tslint": "^5.10.0",
    "tslint-eslint-rules": "^5.3.1",
    "tslint-jsdoc-rules": "^0.1.2",
    "typescript": "^3.2.2"
  },
  "files": [
    "lib/"
  ],
  "husky": {
    "hooks": {
      "pre-commit": "npm test"
    }
  },
  "jest": {
    "roots": [
      "test"
    ],
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": "test/.*\\.spec\\.(ts|tsx)$",
    "moduleDirectories": [
      "node_modules",
      "src"
    ],
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx"
    ],
    "coverageDirectory": "./coverage/",
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.{ts,tsx}"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 90,
        "lines": 90,
        "statements": -10
      }
    }
  },
  "publishConfig": {
    "access": "public"
  }
}
